FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    libjansson-dev \
    libboost-dev \
    imagemagick \
    libtinyxml-dev \
    mercurial \
    cmake \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install PX4 dependencies
ADD setup /root/setup
RUN /root/setup/ubuntu.sh --no-nuttx \
    && rm -r /root/setup

# Install ROS2 Foxy
RUN apt-get update && apt-get install -y \
    curl gnupg2 lsb-release \
    && rm -rf /var/lib/apt/lists/*

RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
RUN echo "deb [arch=arm64] http://packages.ros.org/ros2/ubuntu focal main" > /etc/apt/sources.list.d/ros2-latest.list

RUN apt-get update && apt-get install -y \
    ros-foxy-desktop \
    python3-argcomplete \
    ros-dev-tools \
    && rm -rf /var/lib/apt/lists/*

RUN pip3 install --user -U empy pyros-genmsg setuptools

# Setup XRCE-DDS
RUN git clone https://github.com/eProsima/Micro-XRCE-DDS-Agent.git /root/Micro-XRCE-DDS-Agent
RUN cd /root/Micro-XRCE-DDS-Agent \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make \
    && make install \
    && ldconfig /usr/local/lib \
    && rm -rf /root/Micro-XRCE-DDS-Agent

# Install nodejs and npm using nvm
ENV NVM_DIR /root/.nvm
ENV NODE_VERSION 8.14.0

RUN wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash

# install node and npm
RUN source $NVM_DIR/nvm.sh \
    && nvm install $NODE_VERSION \
    && nvm alias default $NODE_VERSION \
    && nvm use default

# add node and npm to path so the commands are available
ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

RUN source /usr/share/gazebo/setup.sh
RUN update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1

# Build GzWeb
RUN git clone https://github.com/osrf/gzweb.git /root/gzweb
RUN cd /root/gzweb && git checkout gzweb_1.4.1
RUN source /usr/share/gazebo/setup.sh
RUN cd /root/gzweb && npm run deploy --- -m

# Entrypoint
COPY entrypoint.sh /root/entrypoint.sh
ENTRYPOINT ["/root/entrypoint.sh"]